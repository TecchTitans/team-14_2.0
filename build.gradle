buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "org.jacoco:org.jacoco.core:0.8.9"
    }
}

task codeCoverageReport(type: JacocoReport) {

    reports {
        xml.required = false
        html.required = true
        csv.required = false
    }

    def excludesFiles = ['**/*Test*.class']

    //java compiled classes
    def javaTree = fileTree(dir: "$project.buildDir/classes/java", excludes: excludesFiles)
    def mainSrc = "$project.rootDir.absolutePath/core/src/main/java"
    sourceDirectories = files([mainSrc])
    classDirectories = files([javaTree])
    executionData = fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "jacoco"

    version = '1.0'
    ext {
        appName = "Heslington Hustle"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }

    jacoco {
        toolVersion = "0.8.9"
    }

}

project(":desktop") {
    apply plugin: "java-library"

    sourceSets.test.resources.srcDirs = ["src/"]

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "org.mockito:mockito-all:1.9.5"
    }

    jar {
        manifest {
            attributes(
                    'Main-Class': 'main.java.org.skloch.game.DesktopLauncher'
            )
        }
    }

}

project(":core") {
    apply plugin: "java-library"

    sourceSets.test.resources.srcDirs = ["src/"]

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation 'org.json:json:20240303'
        implementation 'junit:junit:4.12+'
    }

    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = false
            html.required = true
            html.destination file("${buildDir}/jacocoHtml")
        }
        dependsOn test // make sure tests are run before generating the report
    }

    test {
        useJUnit()
        maxHeapSize = '1G'
        finalizedBy jacocoTestReport // report is always generated after tests run

        jacoco {
            includes = ['main.java.org.skloch.game.*']
        }

    }

}


project(":test") {
    apply plugin: "java-library"
    apply plugin: "java"

    sourceSets.test.resources.srcDirs = ["src/", "../assets"]

    dependencies {
        implementation project(":core")
        implementation "junit:junit:4.+"
        implementation "org.mockito:mockito-all:1.9.+"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        implementation 'junit:junit:4.+'
        implementation "org.mockito:mockito-all:1.9.+"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    test {
        useJUnit()
        maxHeapSize = '1G'

        jacoco {
            includes = ['main.java.org.skloch.game.*']
        }

    }

}


