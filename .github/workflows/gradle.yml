# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    # on every push to every branch
    branches: [ "**" ]
    # code below runs workflow when a push is given a tag
    # tags: [ "v[0-9]+.[0-9]+.[0-9]" ]
    
  pull_request:
    # on every pr to every branch
    branches: [ "**" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md

      # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
      # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
      #
      # - name: Setup Gradle
      #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      #   with:
      #     gradle-version: '8.5'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # - name: Build with Gradle 8.5
      #   run: gradle build
      # NOTE: The must be run without jacocoTestReport if JaCoCo is not included
      - name: Build with Gradle Wrapper
        run: ./gradlew build jacocoTestReport

      # - name: Run tests with Gradle 8.5
      #   run: gradle test
      # NOTE: if your tests fail, this step *and all subsequent steps* will fail

      - name: Run tests with Gradle Wrapper
        run: ./gradlew test

      # - name: Build a distributable .jar executable with Gradle 8.5
      #   run: gradle desktop:dist

      - name: Build distributable with Gradle Wrapper for archiving
        run: ./gradlew desktop:dist

      # - name: Upload the contents of the build folder to GitHub and attach to the action.
      #   run: use the GitHub action upload-artifact
      # NOTE: this does not create a release, a package or tag this artifact to a commit.
      #       The artifact is added to the action on the commit instead. This is because
      #       these are the same as unstable nightly builds so unless manual testing is
      #       done they should not be considered a finished product.

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist.jar
          path: desktop/build/libs

      # Generates JaCoCo coverage report since it is not automatically generated when built with gradle wrapper

      - name: Generate JaCoCo coverage report
        run: ./gradlew jacocoTestReport

      # Uploads JaCoCo coverage report of all tests in the project for every GitHub action. 

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: test/build/reports/jacoco/test/html

  # if a workflow action has a version tag, creates automatic GitHub version release and also attactches the artifact jar
  release:
      runs-on: ubuntu-latest
      needs: ["build"]
      if: startsWith(github.ref, 'ref/tags/')
      permissions:
        contents: write
      steps:
        - name: Download a Build Artifact
          uses: actions/download-artifact@v4
          with:
            name: dist.jar
        - name: Release
          uses: softprops/action-gh-release@v2
          with:
            files: dist.jar
       




        
          
